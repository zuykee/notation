{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/utils/methods.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/utils/utils.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/namespaces.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/utils/window.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/Base.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/utils/adopter.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/regex.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/optional/class.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/optional/css.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/optional/data.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/optional/memory.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/event.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/Color.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/Point.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/Matrix.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/parser.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/Box.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/ArrayPolyfill.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/List.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/selector.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/EventTarget.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/defaults.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/SVGArray.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/attr.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Dom.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Element.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/optional/sugar.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/circled.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/optional/transform.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Shape.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Circle.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Container.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Defs.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Ellipse.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Stop.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/gradiented.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Gradient.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Pattern.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Image.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/PointArray.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/pointed.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Line.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Marker.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/animation/Controller.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/types/PathArray.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/animation/Morphable.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Path.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/poly.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Polygon.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Polyline.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Rect.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/animation/Queue.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/animation/Animator.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/animation/Timeline.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/animation/Runner.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Svg.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Symbol.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/modules/core/textable.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Text.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Tspan.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/ForeignObject.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/G.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/A.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Mask.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Style.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/TextPath.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/elements/Use.js","webpack://[name]/./node_modules/@svgdotjs/svg.js/src/main.js","webpack://[name]/./chordbox.js","webpack://[name]/./builder.js","webpack://[name]/./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","methods_methods","names","registerMethods","Array","isArray","_name","addMethodNames","getOwnPropertyNames","assign","getMethodsFor","_names","push","map","array","block","il","length","result","radians","Math","PI","camelCase","toLowerCase","replace","g","toUpperCase","capitalize","charAt","slice","proportionalSize","element","width","height","box","bbox","getOrigin","ox","oy","origin","string","trim","x","y","bx","includes","by","namespaces_ns","xmlns","xlink","svgjs","globals","window","document","Base","adopter_elements","root","createElementNS","makeInstance","adopter","querySelector","node","innerHTML","firstChild","nodeOrNew","Node","adopt","instance","className","nodeName","register","asRoot","did","eid","extend","methods","attrCheck","method","wrapWithAttrCheck","fn","args","constructor","apply","this","attr","siblings","parent","children","position","index","next","prev","forward","removeElement","add","isRoot","appendChild","defs","backward","front","back","before","remove","after","insertBefore","insertAfter","numberAndUnit","hex","rgb","reference","regex_transforms","whitespace","isHex","isRgb","isBlank","isNumber","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","dots","classes","split","hasClass","indexOf","addClass","join","removeClass","filter","toggleClass","css","style","val","ret","arguments","cssText","el","forEach","cased","test","show","hide","visible","data","a","v","JSON","parse","e","stringify","remember","k","memory","forget","_memory","listenerId","windowEvents","getEvents","getEventHolder","events","getEventTarget","on","listener","binding","options","bag","_svgjsListenerId","event","ev","addEventListener","off","namespace","removeEventListener","clearEvents","componentHex","component","integer","round","max","min","toString","is","space","hueToRgb","q","Color_Color","[object Object]","inputs","init","b","_a","_b","_c","_d","values","params","z","h","getParameters","noWhitespace","exec","parseInt","Error","hexParse","substring","sixDigitHex","components","dToR","cos","sin","yL","xL","zL","ct","mx","nm","rU","gU","bU","pow","bd","xyz","r255","g255","b255","rL","gL","bL","xU","yU","zU","lab","sqrt","atan2","isGrey","delta","_clamped","toHex","rV","gV","bV","u","random","pi","grey","color","Point_Point","source","base","clone","transformO","Matrix_Matrix","isMatrixLike","f","closeEnough","threshold","abs","fromArray","Element_Element","matrixify","parseFloat","transform","multiplyO","formatTransforms","transformer","translateO","rx","ry","lmultiplyO","scaleO","scaleX","scaleY","skewO","skewX","skewY","shearO","shear","rotateO","theta","isFinite","px","py","dx","dy","tx","ty","originX","originY","sx","sy","lam","rotate","translateX","translateY","cx","cy","determinant","ccw","thetaRad","st","matrix","matrixMultiply","det","na","nb","nc","nd","ne","nf","inverseO","axis","around","flipO","lx","tan","ly","skew","aroundO","other","comp","flipBoth","flip","flipX","flipY","scale","positionX","positionY","translate","relative","relativeX","relativeY","parser","nodes","svg","size","path","parentNode","body","documentElement","addTo","isNulledBox","Box_Box","left","top","w","x2","y2","xMin","Infinity","xMax","yMin","yMax","pageXOffset","pageYOffset","getBox","cb","retry","contains","viewbox","level","point","clientWidth","clientHeight","getComputedStyle","getPropertyValue","zoomX","zoomY","zoom","zoomAmount","Number","MIN_VALUE","subClassArray","Function","baseClass","_constructor","Arr","arr","List","types_List","fnOrMethodName","concat","reserved","baseFind","query","querySelectorAll","reduce","obj","attrs","each","EventTarget_EventTarget","super","Event","dispatchEvent","CustomEvent","detail","cancelable","dispatch","type","j","defaultPrevented","noop","defaults_timeline","duration","ease","delay","defaults_attrs","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","fill","stroke","opacity","offset","stop-opacity","stop-color","text-anchor","SVGArray","types_SVGArray","Set","SVGNumber_SVGNumber","unit","isNaN","match","valueOf","number","hooks","Dom_Dom","childNodes","put","hasChildNodes","removeChild","lastChild","writeDataToDom","assignNewId","id","cloneNode","deep","selector","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","replaceChild","precision","factor","keys","newAttrs","svgOrFn","outerHTML","well","len","fragment","current","_this","createDocumentFragment","firstElementChild","text","textContent","attributes","nodeValue","last","curr","removeAttribute","getAttribute","_val","hook","isColor","leading","setAttributeNS","setAttribute","rebuild","find","findOne","dom","hasAttribute","setData","plus","until","parents","getBBox","rbox","getBoundingClientRect","screenCTM","inverse","addOffset","ctm","getCTM","rect","getScreenCTM","sugar","prefix","circled_rx","circled_ry","circled_x","circled_y","circled_cx","circled_cy","circled_width","divide","circled_height","extension","mat","angle","direction","directionString","radius","_element","getTotalLength","pointAt","getPointAtLength","font","ax","ay","untransform","str","kv","reverse","lmultiply","toParent","pCtm","multiply","toRoot","decomposed","decompose","Shape_Shape","Circle_Circle","Container","circle","move","Container_Container","flatten","ungroup","Defs_Defs","Ellipse_Ellipse","circled_namespaceObject","ellipse","Stop_Stop","gradiented_from","fx","fy","x1","y1","gradiented_to","Gradient_Gradient","update","clear","url","gradiented_namespaceObject","gradient","Defs","Pattern_Pattern","pattern","patternUnits","Image_Image","callback","img","Image","src","image","load","PointArray","types_PointArray","pos","destination","points","pop","maxX","maxY","minX","minY","MorphArray","pointed_x","pointed_y","pointed_width","pointed_height","Line_Line","toLine","pointed_namespaceObject","line","plot","Marker_Marker","makeSetterGetter","marker","ref","easing","-","<>",">","<","bezier","steps","stepPosition","jumps","beforeFlag","step","floor","jumping","Stepper","Controller_Ease","from","to","Controller","stepper","target","dt","done","recalculate","_duration","overshoot","_overshoot","os","log","zeta","wn","velocity","acceleration","newPosition","windup","integral","error","P","I","D","PathArray","types_PathArray","pathRegReplace","pathHandlers","M","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsaz","PathArray_i","jl","arrayToString","pathArray","equalCommands","destinationArray","paramCnt","Morphable_Morphable","_stepper","_from","_to","_type","_context","_morphObj","_set","NonMorphable","morphableTypes","ObjectBag","toArray","TransformBag","defaults","objOrArr","entries","sort","Path_Path","_array","poly_array","poly_size","Polygon_Polygon","polygon","poly_namespaceObject","Polyline_Polyline","polyline","Rect_Rect","Queue","_first","_last","item","Animator","nextDraw","frames","timeouts","immediates","timer","performance","Date","transforms","run","requestAnimationFrame","_draw","time","now","nextTimeout","lastTimeout","shift","nextFrame","lastFrame","nextImmediate","first","animation_Animator","makeSchedule","runnerInfo","start","runner","end","defaultSource","Timeline_Timeline","timeSource","_timeSource","_startTime","_speed","_persist","_nextFrame","_paused","_runners","_runnerIds","_lastRunnerId","_time","_lastSourceTime","_lastStepTime","_step","_stepFn","_stepImmediate","when","absoluteStartTime","endTime","getEndTime","unschedule","timeline","persist","info","updateTime","_continue","splice","lastRunnerInfo","lastDuration","active","pause","speed","yes","currentSpeed","positive","dtOrForever","immediateStep","dtSource","dtTime","fire","reset","runnersLeft","dtToStart","cancelFrame","frame","Element","_timeline","Runner_Runner","_queue","_isDeclarative","_history","enabled","_lastTime","_reseted","transformId","_haveReversed","_reverse","_loopsDone","_swing","_wait","_times","_frameId","_prepareRunner","sanitise","loop","schedule","times","swing","wait","animate","initFn","runFn","retargetFn","isTransform","initialiser","retarget","initialised","finished","queue","loopDuration","loopsDone","partial","swinging","backwards","uncliped","loops","swingForward","running","_lastPosition","justStarted","justFinished","declarative","_initialise","converged","_run","morpher","caller","play","extra","needsIt","positionOrDt","allfinished","Runner_FakeRunner","getRunnerTransform","RunnerArray","runners","ids","lastRunner","edit","mergeWith","newRunner","deleteCnt","clearTransformsFromQueue","currentRunner","_transformationRunners","clearBefore","cancelImmediate","immediate","netTransform","merge","styleAttr","at","_tryRetarget","newLevel","newPoint","_rememberMorpher","affine","isMatrix","currentAngle","startTransform","undefined","_addRunner","_clearTransformRunnersBefore","clearTransform","_currentTransform","rTarget","rCurrent","possibilities","distances","shortest","affineParameters","addTransform","newTransforms","_queueNumber","_queueNumberDelta","newTo","_queueObject","Svg_Svg","SVGElement","version","_defs","nested","Symbol_Symbol","plain","_build","createTextNode","textable_length","getComputedTextLength","symbol","Text_Text","_rebuild","firstLine","nodeType","newLined","build","tspan","newLine","self","blankLineOffset","fontSize","textable_namespaceObject","Tspan_Tspan","Tspan","ClipPath_ClipPath","targets","unclip","clip","clipper","ForeignObject_ForeignObject","foreignObject","G_G","dmove","child","group","A_A","link","linkTo","Mask_Mask","unmask","mask","masker","Style_Style","rule","fontFamily","addText","cssRule","fontface","TextPath_TextPath","track","textPath","Text","importNodes","Path","Use_Use","file","use","SVG","registerMorphableType","ChordBox","sel","_classCallCheck","_objectSpread","numStrings","numFrets","strokeWidth","showTuning","defaultColor","bgColor","labelColor","fontStyle","fontWeight","labelWeight","param","canvas","spacing","fretSpacing","metrics","circleRadius","barreRadius","ceil","barShiftX","bridgeStrokeWidth","positionText","chord","bars","tuning","msg","textAttrs","family","weight","textColor","newX","newY","_ref","barres","fromX","fromY","bridgeColor","drawText","drawLine","stringWidth","stringColor","fretWidth","fretColor","lightUp","fret","label","lightBar","fromString","_ref2","stringNum","shiftPosition","mute","fretNum","strokeColor","textYShift","stringFrom","stringTo","theFretNum","stringFromNum","stringToNum","xTo","yTo","SHAPES","M E","m E","7 E","m7 E","M7 E","dim E","m7b5 E","sus4 E","7sus4 E","13 E","M A","m A","7 A","m7 A","m7b5 A","dim A","M7 A","sus2 A","sus4 A","7sus4 A","9 A","7b9 A","7#9 A","13 A","POSITIONS","E","A#","Bb","B","C#","Db","D#","Eb","F","F#","Gb","G","G#","Ab","shape","theString","struct","draw","opts","__webpack_exports__","chordbox"],"mappings":"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","file":"vexchords.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (let _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (let _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n","// Map function\r\nexport function map (array, block) {\r\n  var i\r\n  var il = array.length\r\n  var result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  var i\r\n  var il = array.length\r\n  var result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to string seperated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\nexport function getOrigin (o, element) {\r\n  // Allow origin or around as the names\r\n  let origin = o.origin // o.around == null ? o.origin : o.around\r\n  let ox, oy\r\n\r\n  // Allow the user to pass a string to rotate around a given point\r\n  if (typeof origin === 'string' || origin == null) {\r\n    // Get the bounding box of the element with no transformations applied\r\n    const string = (origin || 'center').toLowerCase().trim()\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // Calculate the transformed x and y coordinates\r\n    let bx = string.includes('left') ? x\r\n      : string.includes('right') ? x + width\r\n      : x + width / 2\r\n    let by = string.includes('top') ? y\r\n      : string.includes('bottom') ? y + height\r\n      : y + height / 2\r\n\r\n    // Set the bounds eg : \"bottom-left\", \"Top right\", \"middle\" etc...\r\n    ox = o.ox != null ? o.ox : bx\r\n    oy = o.oy != null ? o.oy : by\r\n  } else {\r\n    ox = origin[0]\r\n    oy = origin[1]\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n","// Default namespaces\r\nexport let ns = 'http://www.w3.org/2000/svg'\r\nexport let xmlns = 'http://www.w3.org/2000/xmlns/'\r\nexport let xlink = 'http://www.w3.org/1999/xlink'\r\nexport let svgjs = 'http://svgjs.com/svgjs'\r\n","export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n","export default class Base {\r\n  // constructor (node/*, {extensions = []} */) {\r\n  //   // this.tags = []\r\n  //   //\r\n  //   // for (let extension of extensions) {\r\n  //   //   extension.setup.call(this, node)\r\n  //   //   this.tags.push(extension.name)\r\n  //   // }\r\n  // }\r\n}\r\n","import { addMethodNames } from './methods.js'\r\nimport { capitalize } from './utils.js'\r\nimport { ns } from '../modules/core/namespaces.js'\r\nimport { globals } from '../utils/window.js'\r\nimport Base from '../types/Base.js'\r\n\r\nconst elements = {}\r\nexport const root = '___SYMBOL___ROOT___'\r\n\r\n// Method for element creation\r\nexport function create (name) {\r\n  // create element\r\n  return globals.document.createElementNS(ns, name)\r\n}\r\n\r\nexport function makeInstance (element) {\r\n  if (element instanceof Base) return element\r\n\r\n  if (typeof element === 'object') {\r\n    return adopter(element)\r\n  }\r\n\r\n  if (element == null) {\r\n    return new elements[root]()\r\n  }\r\n\r\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\r\n    return adopter(globals.document.querySelector(element))\r\n  }\r\n\r\n  var node = create('svg')\r\n  node.innerHTML = element\r\n\r\n  // We can use firstChild here because we know,\r\n  // that the first char is < and thus an element\r\n  element = adopter(node.firstChild)\r\n\r\n  return element\r\n}\r\n\r\nexport function nodeOrNew (name, node) {\r\n  return node instanceof globals.window.Node ? node : create(name)\r\n}\r\n\r\n// Adopt existing svg elements\r\nexport function adopt (node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance instanceof Base) return node.instance\r\n\r\n  // initialize variables\r\n  var className = capitalize(node.nodeName || 'Dom')\r\n\r\n  // Make sure that gradients are adopted correctly\r\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\r\n    className = 'Gradient'\r\n\r\n  // Fallback to Dom if element is not known\r\n  } else if (!elements[className]) {\r\n    className = 'Dom'\r\n  }\r\n\r\n  return new elements[className](node)\r\n}\r\n\r\nlet adopter = adopt\r\n\r\nexport function mockAdopt (mock = adopt) {\r\n  adopter = mock\r\n}\r\n\r\nexport function register (element, name = element.name, asRoot = false) {\r\n  elements[name] = element\r\n  if (asRoot) elements[root] = element\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\r\n\r\n  return element\r\n}\r\n\r\nexport function getClass (name) {\r\n  return elements[name]\r\n}\r\n\r\n// Element id sequence\r\nlet did = 1000\r\n\r\n// Get next named element id\r\nexport function eid (name) {\r\n  return 'Svgjs' + capitalize(name) + (did++)\r\n}\r\n\r\n// Deep new id assignment\r\nexport function assignNewId (node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.children.length - 1; i >= 0; i--) {\r\n    assignNewId(node.children[i])\r\n  }\r\n\r\n  if (node.id) {\r\n    return adopt(node).id(eid(node.nodeName))\r\n  }\r\n\r\n  return adopt(node)\r\n}\r\n\r\n// Method for extending objects\r\nexport function extend (modules, methods, attrCheck) {\r\n  var key, i\r\n\r\n  modules = Array.isArray(modules) ? modules : [ modules ]\r\n\r\n  for (i = modules.length - 1; i >= 0; i--) {\r\n    for (key in methods) {\r\n      let method = methods[key]\r\n      if (attrCheck) {\r\n        method = wrapWithAttrCheck(methods[key])\r\n      }\r\n      modules[i].prototype[key] = method\r\n    }\r\n  }\r\n}\r\n\r\n// export function extendWithAttrCheck (...args) {\r\n//   extend(...args, true)\r\n// }\r\n\r\nexport function wrapWithAttrCheck (fn) {\r\n  return function (...args) {\r\n    let o = args[args.length - 1]\r\n\r\n    if (o && o.constructor === Object && !(o instanceof Array)) {\r\n      return fn.apply(this, args.slice(0, -1)).attr(o)\r\n    } else {\r\n      return fn.apply(this, args)\r\n    }\r\n  }\r\n}\r\n\r\nexport function invent (config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create === 'function'\r\n    ? config.create\r\n    : function (node) {\r\n      this.constructor(node || create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit) {\r\n    /* eslint new-cap: off */\r\n    initializer.prototype = new config.inherit()\r\n    initializer.prototype.constructor = initializer\r\n  }\r\n\r\n  // Extend with methods\r\n  if (config.extend) { extend(initializer, config.extend) }\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct) { extend(config.parent || elements['Container'], config.construct) }\r\n\r\n  return initializer\r\n}\r\n","import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the curent position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  var i = this.position() + 1\r\n  var p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.removeElement(this).add(this, i)\r\n\r\n  // make sure defs node is always at the top\r\n  if (typeof p.isRoot === 'function' && p.isRoot()) {\r\n    p.node.appendChild(p.defs().node)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  var i = this.position()\r\n\r\n  if (i > 0) {\r\n    this.parent().removeElement(this).add(this, i - 1)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  var p = this.parent()\r\n\r\n  // Move node forward\r\n  p.node.appendChild(this.node)\r\n\r\n  // Make sure defs node is always at the top\r\n  if (typeof p.isRoot === 'function' && p.isRoot()) {\r\n    p.node.appendChild(p.defs().node)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  if (this.position() > 0) {\r\n    this.parent().removeElement(this).add(this, 0)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  var i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  var i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n","// Parse unit value\r\nexport let numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport let hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport let rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport let reference = /(#[a-z0-9\\-_]+)/i\r\n\r\n// splits a transformation chain\r\nexport let transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport let whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport let isHex = /^#[a-f0-9]{3,6}$/i\r\n\r\n// Test rgb value\r\nexport let isRgb = /^rgb\\(/\r\n\r\n// Test css declaration\r\nexport let isCss = /[^:]+:[^;]+;?/\r\n\r\n// Test for blank string\r\nexport let isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport let isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for percent value\r\nexport let isPercent = /^-?[\\d.]+%$/\r\n\r\n// Test for image url\r\nexport let isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport let delimiter = /[\\s,]+/\r\n\r\n// The following regex are used to parse the d attribute of a path\r\n\r\n// Matches all hyphens which are not after an exponent\r\nexport let hyphen = /([^e])-/gi\r\n\r\n// Replaces and tests for all path letters\r\nexport let pathLetters = /[MLHVCSQTAZ]/gi\r\n\r\n// yes we need this one, too\r\nexport let isPathLetter = /[MLHVCSQTAZ]/i\r\n\r\n// matches 0.154.23.45\r\nexport let numbersWithDots = /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n// matches .\r\nexport let dots = /\\./g\r\n","import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  var attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    var array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n","import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  let ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        let t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties in the array\r\n    if (Array.isArray(style)) {\r\n      for (let name of style) {\r\n        let cased = camelCase(name)\r\n        ret[cased] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (let name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n","import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null ? null\r\n      : r === true || typeof v === 'string' || typeof v === 'number' ? v\r\n      : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n","import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (var key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (var i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n","import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nlet windowEvents = {}\r\n\r\nfunction getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nfunction getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nfunction clearEvents (instance) {\r\n  const n = instance.getEventHolder()\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  var l = listener.bind(binding || node)\r\n  var instance = makeInstance(node)\r\n  var bag = getEvents(instance)\r\n  var n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    var ev = event.split('.')[0]\r\n    var ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  var instance = makeInstance(node)\r\n  var bag = getEvents(instance)\r\n  var n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    var ev = event && event.split('.')[0]\r\n    var ns = event && event.split('.')[1]\r\n    var namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data) {\r\n  var n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n","\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb') ? { _a: a.r, _b: a.g, _c: a.b, space: 'rgb' }\r\n    : is(a, 'xyz') ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n    : is(a, 'hsl') ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n    : is(a, 'lab') ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n    : is(a, 'lch') ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n    : is(a, 'cmyk') ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n    : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (let component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error(`Unsupported string format, can't construct Color`)\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb' ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz' ? { x: _a, y: _b, z: _c }\r\n      : this.space === 'hsl' ? { h: _a, s: _b, l: _c }\r\n      : this.space === 'lab' ? { l: _a, a: _b, b: _c }\r\n      : this.space === 'lch' ? { l: _a, c: _b, h: _c }\r\n      : this.space === 'cmyk' ? { c: _a, m: _b, y: _c, k: _d }\r\n      : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          let { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      let pow = Math.pow\r\n      let bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        let color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\r\n\r\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\r\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\r\n\r\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey ? 0\r\n      : l > 0.5 ? delta / (2 - max - min)\r\n      : delta / (max + min)\r\n    const h = isGrey ? 0\r\n      : max === r ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n      : max === g ? ((b - r) / delta + 2) / 6\r\n      : max === b ? ((r - g) / delta + 4) / 6\r\n      : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\r\n\r\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\r\n\r\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    let { _a, _b, _c } = this.rgb()\r\n    let { max, min, round } = Math\r\n    let format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  toHex () {\r\n    let [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\r\n\r\n  toString () {\r\n    return this.toHex()\r\n  }\r\n\r\n  toRgb () {\r\n    let [ rV, gV, bV ] = this._clamped()\r\n    let string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\r\n\r\n  toArray () {\r\n    let { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\r\n\r\n  /*\r\n  Generating random colors\r\n  */\r\n\r\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    }\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n  // Test if given value is a color string\r\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\r\n\r\n  // Test if given value is an rgb object\r\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\r\n\r\n  // Test if given value is a color\r\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\r\n}\r\n","import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (x, y) {\r\n    let source\r\n    let base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object' ? { x: x.x, y: x.y }\r\n      : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone point\r\n  clone () {\r\n    return new Point(this)\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Initialize\r\n  init (source) {\r\n    var base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element ? source.matrixify()\r\n      : typeof source === 'string' ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n      : Array.isArray(source) ? Matrix.fromArray(source)\r\n      : (typeof source === 'object' && Matrix.isMatrixLike(source)) ? source\r\n      : (typeof source === 'object') ? new Matrix().transform(source)\r\n      : arguments.length === 6 ? Matrix.fromArray([].slice.call(arguments))\r\n      : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\r\n  // Clones this matrix\r\n  clone () {\r\n    return new Matrix(this)\r\n  }\r\n\r\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      var matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    var t = Matrix.formatTransforms(o)\r\n    var current = this\r\n    let { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    var transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      const dx = t.px ? t.px - origin.x : 0\r\n      const dy = t.py ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\r\n  // Applies a matrix defined by its affine parameters\r\n  compose (o) {\r\n    if (o.origin) {\r\n      o.originX = o.origin[0]\r\n      o.originY = o.origin[1]\r\n    }\r\n    // Get the parameters\r\n    var ox = o.originX || 0\r\n    var oy = o.originY || 0\r\n    var sx = o.scaleX || 1\r\n    var sy = o.scaleY || 1\r\n    var lam = o.shear || 0\r\n    var theta = o.rotate || 0\r\n    var tx = o.translateX || 0\r\n    var ty = o.translateY || 0\r\n\r\n    // Apply the standard matrix\r\n    var result = new Matrix()\r\n      .translateO(-ox, -oy)\r\n      .scaleO(sx, sy)\r\n      .shearO(lam)\r\n      .rotateO(theta)\r\n      .translateO(tx, ty)\r\n      .lmultiplyO(this)\r\n      .translateO(ox, oy)\r\n    return result\r\n  }\r\n\r\n  // Decomposes this matrix into its affine parameters\r\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    var a = this.a\r\n    var b = this.b\r\n    var c = this.c\r\n    var d = this.d\r\n    var e = this.e\r\n    var f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    var determinant = a * d - b * c\r\n    var ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    var sx = ccw * Math.sqrt(a * a + b * b)\r\n    var thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    var theta = 180 / Math.PI * thetaRad\r\n    var ct = Math.cos(thetaRad)\r\n    var st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    var lam = (a * c + b * d) / determinant\r\n    var sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    let tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    let ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n  // Left multiplies by the given matrix\r\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\r\n\r\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    var l = this\r\n    var r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\r\n\r\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\r\n\r\n  lmultiplyO (matrix) {\r\n    var r = this\r\n    var l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\r\n\r\n  // Inverses matrix\r\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    var a = this.a\r\n    var b = this.b\r\n    var c = this.c\r\n    var d = this.d\r\n    var e = this.e\r\n    var f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    var det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    var na = d / det\r\n    var nb = -b / det\r\n    var nc = -c / det\r\n    var nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    var ne = -(na * e + nc * f)\r\n    var nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\r\n\r\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\r\n\r\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\r\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\r\n  // Scale matrix\r\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\r\n\r\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    let { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\r\n\r\n  // Rotate matrix\r\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\r\n\r\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    let cos = Math.cos(r)\r\n    let sin = Math.sin(r)\r\n\r\n    let { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\r\n\r\n  // Flip matrix on x or y, at a given offset\r\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\r\n\r\n  flipO (axis, around) {\r\n    return axis === 'x' ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y' ? this.scaleO(1, -1, 0, around)\r\n      : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\r\n\r\n  // Shear matrix\r\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\r\n\r\n  shearO (lx, cx = 0, cy = 0) {\r\n    let { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\r\n\r\n  // Skew Matrix\r\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\r\n\r\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    let lx = Math.tan(x)\r\n    let ly = Math.tan(y)\r\n\r\n    let { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\r\n\r\n  // SkewX\r\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\r\n\r\n  skewXO (x, cx, cy) {\r\n    return this.skewO(x, 0, cx, cy)\r\n  }\r\n\r\n  // SkewY\r\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\r\n\r\n  skewYO (y, cx, cy) {\r\n    return this.skewO(0, y, cx, cy)\r\n  }\r\n\r\n  // Transform around a center point\r\n  aroundO (cx, cy, matrix) {\r\n    var dx = cx || 0\r\n    var dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\r\n\r\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\r\n\r\n  // Check if two matrices are equal\r\n  equals (other) {\r\n    var comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\r\n\r\n  // Convert matrix to string\r\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\r\n\r\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\r\n\r\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    var flipBoth = o.flip === 'both' || o.flip === true\r\n    var flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    var flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    var skewX = o.skew && o.skew.length ? o.skew[0]\r\n      : isFinite(o.skew) ? o.skew\r\n      : isFinite(o.skewX) ? o.skewX\r\n      : 0\r\n    var skewY = o.skew && o.skew.length ? o.skew[1]\r\n      : isFinite(o.skew) ? o.skew\r\n      : isFinite(o.skewY) ? o.skewY\r\n      : 0\r\n    var scaleX = o.scale && o.scale.length ? o.scale[0] * flipX\r\n      : isFinite(o.scale) ? o.scale * flipX\r\n      : isFinite(o.scaleX) ? o.scaleX * flipX\r\n      : flipX\r\n    var scaleY = o.scale && o.scale.length ? o.scale[1] * flipY\r\n      : isFinite(o.scale) ? o.scale * flipY\r\n      : isFinite(o.scaleY) ? o.scaleY * flipY\r\n      : flipY\r\n    var shear = o.shear || 0\r\n    var theta = o.rotate || o.theta || 0\r\n    var origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    var ox = origin.x\r\n    var oy = origin.y\r\n    var position = new Point(o.position || o.px || o.positionX, o.py || o.positionY)\r\n    var px = position.x\r\n    var py = position.y\r\n    var translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    var tx = translate.x\r\n    var ty = translate.y\r\n    var relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    var rx = relative.x\r\n    var ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\r\n\r\n  // left matrix, right matrix, target matrix which is overwritten\r\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    var a = l.a * r.a + l.c * r.b\r\n    var b = l.b * r.a + l.d * r.b\r\n    var c = l.a * r.c + l.c * r.d\r\n    var d = l.b * r.c + l.d * r.d\r\n    var e = l.e + l.a * r.e + l.c * r.f\r\n    var f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    var rect = this.rect(1, 1)\r\n    var m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix)\r\n","import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    let svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n\r\n    let path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    let b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nfunction isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nfunction domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (source) {\r\n    var base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string' ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source) ? source\r\n      : typeof source === 'object' ? [ source.left != null ? source.left\r\n      : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n      : arguments.length === 4 ? [].slice.call(arguments)\r\n      : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    let x = Math.min(this.x, box.x)\r\n    let y = Math.min(this.y, box.y)\r\n    let width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    let height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    let pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return this\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n}\r\n\r\nfunction getBox (cb, retry) {\r\n  let box\r\n\r\n  try {\r\n    box = cb(this.node)\r\n\r\n    if (isNulledBox(box) && !domContains(this.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    box = retry(this)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  return new Box(getBox.call(this, (node) => node.getBBox(), (el) => {\r\n    try {\r\n      let clone = el.clone().addTo(parser().svg).show()\r\n      let box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      throw new Error('Getting bbox of element \"' + el.node.nodeName + '\" is not possible. ' + e.toString())\r\n    }\r\n  }))\r\n}\r\n\r\nexport function rbox (el) {\r\n  let box = new Box(getBox.call(this, (node) => node.getBoundingClientRect(), (el) => {\r\n    throw new Error('Getting rbox of element \"' + el.node.nodeName + '\" is not possible')\r\n  }))\r\n  if (el) return box.transform(el.screenCTM().inverse())\r\n  return box.addOffset()\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      let width = this.node.clientWidth\r\n      let height = this.node.clientHeight\r\n      const v = this.viewbox()\r\n\r\n      // Firefox does not support clientHeight and returns 0\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=874811\r\n      if (!width && !height) {\r\n        var style = window.getComputedStyle(this.node)\r\n        width = parseFloat(style.getPropertyValue('width'))\r\n        height = parseFloat(style.getPropertyValue('height'))\r\n      }\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MIN_VALUE\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box)\r\n","/* eslint no-new-func: \"off\" */\r\nexport const subClassArray = (function () {\r\n  try {\r\n    // try es6 subclassing\r\n    return Function('name', 'baseClass', '_constructor', [\r\n      'baseClass = baseClass || Array',\r\n      'return {',\r\n      '  [name]: class extends baseClass {',\r\n      '    constructor (...args) {',\r\n      '      super(...args)',\r\n      '      _constructor && _constructor.apply(this, args)',\r\n      '    }',\r\n      '  }',\r\n      '}[name]'\r\n    ].join('\\n'))\r\n  } catch (e) {\r\n    // Use es5 approach\r\n    return (name, baseClass = Array, _constructor) => {\r\n      const Arr = function () {\r\n        baseClass.apply(this, arguments)\r\n        _constructor && _constructor.apply(this, arguments)\r\n      }\r\n\r\n      Arr.prototype = Object.create(baseClass.prototype)\r\n      Arr.prototype.constructor = Arr\r\n\r\n      Arr.prototype.map = function (fn) {\r\n        const arr = new Arr()\r\n        arr.push.apply(arr, Array.prototype.map.call(this, fn))\r\n        return arr\r\n      }\r\n\r\n      return Arr\r\n    }\r\n  }\r\n})()\r\n","import { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\n\r\nconst List = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n})\r\n\r\nexport default List\r\n\r\nextend(List, {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el) => {\r\n        return fnOrMethodName.call(el, el)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = ['toArray', 'constructor', 'each']\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend(List, methods)\r\n}\r\n","import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n","import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\r\nexport default class EventTarget extends Base {\r\n  constructor ({ events = {} } = {}) {\r\n    super()\r\n    this.events = events\r\n  }\r\n\r\n  addEventListener () {}\r\n\r\n  dispatch (event, data) {\r\n    return dispatch(this, event, data)\r\n  }\r\n\r\n  dispatchEvent (event) {\r\n    const bag = this.getEventHolder().events\r\n    if (!bag) return true\r\n\r\n    const events = bag[event.type]\r\n\r\n    for (let i in events) {\r\n      for (let j in events[i]) {\r\n        events[i][j](event)\r\n      }\r\n    }\r\n\r\n    return !event.defaultPrevented\r\n  }\r\n\r\n  // Fire given event\r\n  fire (event, data) {\r\n    this.dispatch(event, data)\r\n    return this\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this\r\n  }\r\n\r\n  // Unbind event from listener\r\n  off (event, listener) {\r\n    off(this, event, listener)\r\n    return this\r\n  }\r\n\r\n  // Bind given event to listener\r\n  on (event, listener, binding, options) {\r\n    on(this, event, listener, binding, options)\r\n    return this\r\n  }\r\n\r\n  removeEventListener () {}\r\n}\r\n\r\nregister(EventTarget)\r\n","\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport let timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport let attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\n\r\nconst SVGArray = subClassArray('SVGArray', Array, function (arr) {\r\n  this.init(arr)\r\n})\r\n\r\nexport default SVGArray\r\n\r\nextend(SVGArray, {\r\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  },\r\n\r\n  toString () {\r\n    return this.join(' ')\r\n  },\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  },\r\n\r\n  // Parse whitespace separated string\r\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  },\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  },\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\r\n})\r\n","import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit convertions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%' ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's' ? this.value / 1e3\r\n      : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n}\r\n","import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (let node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null ? defaults[attr]\r\n      : isNumber.test(val) ? parseFloat(val)\r\n      : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string' ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n","import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { ns } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super(node)\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent) {\r\n    return makeInstance(parent).put(this)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone () {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return assignNewId(this.node.cloneNode(true))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    var children = this.children()\r\n    var i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName) {\r\n    return this.put(new Dom(create(nodeName)))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // dont't set directly width this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    var parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    while (parent) {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n      if (!parent.node.parentNode || parent.node.parentNode.nodeName === '#document' || parent.node.parentNode.nodeName === '#document-fragment') return null // #759, #720\r\n      parent = adopt(parent.node.parentNode)\r\n    }\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent) {\r\n    return makeInstance(parent).add(this)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n    this.node.parentNode.replaceChild(element.node, this.node)\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr()\r\n\r\n    // If we have no map, build one from attrs\r\n    if (!map) {\r\n      map = Object.keys(attrs)\r\n    }\r\n\r\n    // Holds rounded attributes\r\n    const newAttrs = {}\r\n    map.forEach((key) => {\r\n      newAttrs[key] = Math.round(attrs[key] * factor) / factor\r\n    })\r\n\r\n    this.attr(newAttrs)\r\n    return this\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  // Import raw svg\r\n  svg (svgOrFn, outerHTML) {\r\n    var well, len, fragment\r\n\r\n    if (svgOrFn === false) {\r\n      outerHTML = false\r\n      svgOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (svgOrFn == null || typeof svgOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerHTML = outerHTML == null ? true : outerHTML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (svgOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerHTML) {\r\n          let result = svgOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          let result = svgOrFn(this)\r\n          let _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerHTML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerHTML = outerHTML == null ? false : outerHTML\r\n\r\n    // Create temporary holder\r\n    well = globals.document.createElementNS(ns, 'svg')\r\n    fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = svgOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    let parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerHTML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom)\r\n","import { bbox, rbox } from '../types/Box.js'\r\nimport { ctm, screenCTM } from '../types/Matrix.js'\r\nimport {\r\n  extend,\r\n  getClass,\r\n  makeInstance,\r\n  register,\r\n  root\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { point } from '../types/Point.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { reference } from '../modules/core/regex.js'\r\nimport Dom from './Dom.js'\r\nimport List from '../types/List.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nexport default class Element extends Dom {\r\n  constructor (node, attrs) {\r\n    super(node, attrs)\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    this.node.instance = this\r\n\r\n    if (node.hasAttribute('svgjs:data')) {\r\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n    }\r\n  }\r\n\r\n  // Move element by its center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n\r\n  // Move by center over x-axis\r\n  cx (x) {\r\n    return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n  }\r\n\r\n  // Move by center over y-axis\r\n  cy (y) {\r\n    return y == null\r\n      ? this.y() + this.height() / 2\r\n      : this.y(y - this.height() / 2)\r\n  }\r\n\r\n  // Get defs\r\n  defs () {\r\n    return this.root().defs()\r\n  }\r\n\r\n  // Relative move over x and y axes\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n\r\n  // Relative move over x axis\r\n  dx (x) {\r\n    return this.x(new SVGNumber(x).plus(this.x()))\r\n  }\r\n\r\n  // Relative move over y axis\r\n  dy (y) {\r\n    return this.y(new SVGNumber(y).plus(this.y()))\r\n  }\r\n\r\n  // Get parent document\r\n  root () {\r\n    let p = this.parent(getClass(root))\r\n    return p && p.root()\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return this.attr('height', height)\r\n  }\r\n\r\n  // Checks whether the given point inside the bounding box of the element\r\n  inside (x, y) {\r\n    let box = this.bbox()\r\n\r\n    return x > box.x\r\n      && y > box.y\r\n      && x < box.x + box.width\r\n      && y < box.y + box.height\r\n  }\r\n\r\n  // Move element to given x and y values\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n\r\n  // return array of all ancestors of given type up to the root svg\r\n  parents (until = globals.document) {\r\n    until = makeInstance(until)\r\n    let parents = new List()\r\n    let parent = this\r\n\r\n    while (\r\n      (parent = parent.parent())\r\n      && parent.node !== until.node\r\n      && parent.node !== globals.document\r\n    ) {\r\n      parents.push(parent)\r\n    }\r\n\r\n    return parents\r\n  }\r\n\r\n  // Get referenced element form attribute value\r\n  reference (attr) {\r\n    attr = this.attr(attr)\r\n    if (!attr) return null\r\n\r\n    const m = attr.match(reference)\r\n    return m ? makeInstance(m[1]) : null\r\n  }\r\n\r\n  // set given data to the elements data property\r\n  setData (o) {\r\n    this.dom = o\r\n    return this\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    let p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .width(new SVGNumber(p.width))\r\n      .height(new SVGNumber(p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('width', width)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // remove previously set data\r\n    this.node.removeAttribute('svgjs:data')\r\n\r\n    if (Object.keys(this.dom).length) {\r\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n    }\r\n\r\n    return super.writeDataToDom()\r\n  }\r\n\r\n  // Move over x-axis\r\n  x (x) {\r\n    return this.attr('x', x)\r\n  }\r\n\r\n  // Move over y-axis\r\n  y (y) {\r\n    return this.attr('y', y)\r\n  }\r\n}\r\n\r\nextend(Element, {\r\n  bbox, rbox, point, ctm, screenCTM\r\n})\r\n\r\nregister(Element)\r\n","import { on, off } from '../core/event.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  var extension = {}\r\n  var i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction, around) {\r\n    var directionString = typeof direction === 'string' ? direction\r\n      : isFinite(direction) ? 'both'\r\n      : 'both'\r\n    var origin = (direction === 'both' && isFinite(around)) ? [ around, around ]\r\n      : (direction === 'x') ? [ around, 0 ]\r\n      : (direction === 'y') ? [ 0, around ]\r\n      : isFinite(direction) ? [ direction, direction ]\r\n      : [ 0, 0 ]\r\n    return this.transform({ flip: directionString, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y) {\r\n    var type = (this._element || this).type\r\n    return type === 'radialGradient' || type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\nregisterMethods('Text', {\r\n  ax (x) {\r\n    return this.attr('x', x)\r\n  },\r\n  ay (y) {\r\n    return this.attr('y', y)\r\n  },\r\n  amove (x, y) {\r\n    return this.ax(x).ay(y)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      off(this, event)\r\n    } else {\r\n      on(this, event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return x == null\r\n    ? this.attr('cx')\r\n    : this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return y == null\r\n    ? this.attr('cy')\r\n    : this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n","import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  var matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      var kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent) {\r\n  if (this === parent) return this\r\n  var ctm = this.screenCTM()\r\n  var pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot () {\r\n  return this.toParent(this.root())\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    var decomposed = new Matrix(this).decompose()\r\n    return decomposed[o] || decomposed\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  var cleanRelative = relative === true ? this : (relative || false)\r\n  var result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape)\r\n","import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('circle', node), node)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle)\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent) {\r\n    this.each(function () {\r\n      if (this instanceof Container) return this.flatten(parent).ungroup(parent)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    // we need this so that the root does not get removed\r\n    this.node.firstElementChild || this.remove()\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent) {\r\n    parent = parent || this.parent()\r\n\r\n    this.each(function () {\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.remove()\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Container)\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('defs', node), node)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs)\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('ellipse', node), node)\r\n  }\r\n\r\n  size (width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse)\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node) {\r\n    super(nodeOrNew('stop', node), node)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Stop)\r\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport Stop from './Stop.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // Add a color stop\r\n  stop (offset, color, opacity) {\r\n    return this.put(new Stop()).update(offset, color, opacity)\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\r\n\r\n  // Alias string convertion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.defs().gradient(type, block)\r\n    })\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('pattern', node), node)\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Alias string convertion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern)\r\n","import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('image', node), node)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    var img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      var p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image)\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\nimport SVGArray from './SVGArray.js'\r\n\r\nconst PointArray = subClassArray('PointArray', SVGArray)\r\n\r\nexport default PointArray\r\n\r\nextend(PointArray, {\r\n  // Convert array to string\r\n  toString () {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.length, array = []; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  },\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  },\r\n\r\n  // Get morphed array at given position\r\n  at (pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.length, array = []; i < il; i++) {\r\n      array.push([\r\n        this[i][0] + (this.destination[i][0] - this[i][0]) * pos,\r\n        this[i][1] + (this.destination[i][1] - this[i][1]) * pos\r\n      ])\r\n    }\r\n\r\n    return new PointArray(array)\r\n  },\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ [ 0, 0 ] ]) {\r\n    var points = []\r\n\r\n    // if it is an array\r\n    if (array instanceof Array) {\r\n      // and it is not flat, there is no need to parse it\r\n      if (array[0] instanceof Array) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (var i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  },\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transform (m) {\r\n    const points = []\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n      const point = this[i]\r\n      // Perform the matrix multiplication\r\n      points.push([\r\n        m.a * point[0] + m.c * point[1] + m.e,\r\n        m.b * point[0] + m.d * point[1] + m.f\r\n      ])\r\n    }\r\n\r\n    // Return the required point\r\n    return new PointArray(points)\r\n  },\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (var i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    var i\r\n    var box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Get bounding box of points\r\n  bbox () {\r\n    var maxX = -Infinity\r\n    var maxY = -Infinity\r\n    var minX = Infinity\r\n    var minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return { x: minX, y: minY, width: maxX - minX, height: maxY - minY }\r\n  }\r\n})\r\n","import PointArray from '../../types/PointArray.js'\r\n\r\nexport let MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  let b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  let b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('line', node), node)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('marker', node), node)\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\r\n\r\n  // Set marker refX and refY\r\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\r\n\r\n  // Update marker\r\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      var attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker)\r\n","import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[v]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport let easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.ease = easing[fn || timeline.ease] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  var duration = (this._duration || 500) / 1000\r\n  var overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  var eps = 1e-10\r\n  var pi = Math.PI\r\n  var os = Math.log(overshoot / 100 + eps)\r\n  var zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  var wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration, overshoot) {\r\n    super()\r\n    this.duration(duration || 500)\r\n      .overshoot(overshoot || 0)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    var velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    var acceleration = -this.d * velocity - this.k * (current - target)\r\n    var newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p, i, d, windup) {\r\n    super()\r\n\r\n    p = p == null ? 0.1 : p\r\n    i = i == null ? 0.01 : i\r\n    d = d == null ? 0 : d\r\n    windup = windup == null ? 1000 : windup\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    var p = target - current\r\n    var i = (c.integral || 0) + p * dt\r\n    var d = (p - (c.error || 0)) / dt\r\n    var windup = this.windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n","import {\r\n  delimiter,\r\n  dots,\r\n  hyphen,\r\n  isPathLetter,\r\n  numbersWithDots,\r\n  pathLetters\r\n} from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\nimport Point from './Point.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nconst PathArray = subClassArray('PathArray', SVGArray)\r\n\r\nexport default PathArray\r\n\r\nexport function pathRegReplace (a, b, c, d) {\r\n  return c + d.replace(dots, ' .')\r\n}\r\n\r\nfunction arrayToString (a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nlet mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (var i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nextend(PathArray, {\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  },\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n    var i, l\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Test if the passed path array use the same path data commands as this path array\r\n  equalCommands (pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new PathArray(pathArray)\r\n\r\n    equalCommands = this.length === pathArray.length\r\n    for (i = 0, il = this.length; equalCommands && i < il; i++) {\r\n      equalCommands = this[i][0] === pathArray[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  },\r\n\r\n  // Make path array morphable\r\n  morph (pathArray) {\r\n    pathArray = new PathArray(pathArray)\r\n\r\n    if (this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Get morphed path array at given position\r\n  at (pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this\r\n    var destinationArray = this.destination.value\r\n    var array = []\r\n    var pathArray = new PathArray()\r\n    var i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [ sourceArray[i][0] ]\r\n      for (j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if (array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] !== 0)\r\n        array[i][5] = +(array[i][5] !== 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  },\r\n\r\n  // Absolutize and parse path to array\r\n  parse (array = [ [ 'M', 0, 0 ] ]) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof PathArray) return array\r\n\r\n    // prepare for parsing\r\n    var s\r\n    var paramCnt = { 'M': 2, 'L': 2, 'H': 1, 'V': 1, 'C': 6, 'S': 4, 'Q': 4, 'T': 2, 'A': 7, 'Z': 0 }\r\n\r\n    if (typeof array === 'string') {\r\n      array = array\r\n        .replace(numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(hyphen, '$1 -') // add space before hyphen\r\n        .trim() // trim\r\n        .split(delimiter) // split into array\r\n    } else {\r\n      array = array.reduce(function (prev, curr) {\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var result = []\r\n    var p = new Point()\r\n    var p0 = new Point()\r\n    var index = 0\r\n    var len = array.length\r\n\r\n    do {\r\n      // Test if we have a path letter\r\n      if (isPathLetter.test(array[index])) {\r\n        s = array[index]\r\n        ++index\r\n        // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      } else if (s === 'M') {\r\n        s = 'L'\r\n      } else if (s === 'm') {\r\n        s = 'l'\r\n      }\r\n\r\n      result.push(pathHandlers[s].call(null,\r\n        array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n        p, p0\r\n      )\r\n      )\r\n    } while (len > index)\r\n\r\n    return result\r\n  },\r\n\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return parser.nodes.path.getBBox()\r\n  }\r\n})\r\n","import { Ease } from './Controller.js'\r\nimport {\r\n  delimiter,\r\n  numberAndUnit,\r\n  pathLetters\r\n} from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport Color from '../types/Color.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport SVGArray from '../types/SVGArray.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nexport default class Morphable {\r\n  constructor (stepper) {\r\n    this._stepper = stepper || new Ease('-')\r\n\r\n    this._from = null\r\n    this._to = null\r\n    this._type = null\r\n    this._context = null\r\n    this._morphObj = null\r\n  }\r\n\r\n  from (val) {\r\n    if (val == null) {\r\n      return this._from\r\n    }\r\n\r\n    this._from = this._set(val)\r\n    return this\r\n  }\r\n\r\n  to (val) {\r\n    if (val == null) {\r\n      return this._to\r\n    }\r\n\r\n    this._to = this._set(val)\r\n    return this\r\n  }\r\n\r\n  type (type) {\r\n    // getter\r\n    if (type == null) {\r\n      return this._type\r\n    }\r\n\r\n    // setter\r\n    this._type = type\r\n    return this\r\n  }\r\n\r\n  _set (value) {\r\n    if (!this._type) {\r\n      var type = typeof value\r\n\r\n      if (type === 'number') {\r\n        this.type(SVGNumber)\r\n      } else if (type === 'string') {\r\n        if (Color.isColor(value)) {\r\n          this.type(Color)\r\n        } else if (delimiter.test(value)) {\r\n          this.type(pathLetters.test(value)\r\n            ? PathArray\r\n            : SVGArray\r\n          )\r\n        } else if (numberAndUnit.test(value)) {\r\n          this.type(SVGNumber)\r\n        } else {\r\n          this.type(NonMorphable)\r\n        }\r\n      } else if (morphableTypes.indexOf(value.constructor) > -1) {\r\n        this.type(value.constructor)\r\n      } else if (Array.isArray(value)) {\r\n        this.type(SVGArray)\r\n      } else if (type === 'object') {\r\n        this.type(ObjectBag)\r\n      } else {\r\n        this.type(NonMorphable)\r\n      }\r\n    }\r\n\r\n    var result = (new this._type(value))\r\n    if (this._type === Color) {\r\n      result = this._to ? result[this._to[4]]()\r\n        : this._from ? result[this._from[4]]()\r\n        : result\r\n    }\r\n    result = result.toArray()\r\n\r\n    this._morphObj = this._morphObj || new this._type()\r\n    this._context = this._context\r\n      || Array.apply(null, Array(result.length))\r\n        .map(Object)\r\n        .map(function (o) {\r\n          o.done = true\r\n          return o\r\n        })\r\n    return result\r\n  }\r\n\r\n  stepper (stepper) {\r\n    if (stepper == null) return this._stepper\r\n    this._stepper = stepper\r\n    return this\r\n  }\r\n\r\n  done () {\r\n    var complete = this._context\r\n      .map(this._stepper.done)\r\n      .reduce(function (last, curr) {\r\n        return last && curr\r\n      }, true)\r\n    return complete\r\n  }\r\n\r\n  at (pos) {\r\n    var _this = this\r\n\r\n    return this._morphObj.fromArray(\r\n      this._from.map(function (i, index) {\r\n        return _this._stepper.step(i, _this._to[index], pos, _this._context[index], _this._context)\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport class NonMorphable {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (val) {\r\n    val = Array.isArray(val) ? val[0] : val\r\n    this.value = val\r\n    return this\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value ]\r\n  }\r\n}\r\n\r\nexport class TransformBag {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (obj) {\r\n    if (Array.isArray(obj)) {\r\n      obj = {\r\n        scaleX: obj[0],\r\n        scaleY: obj[1],\r\n        shear: obj[2],\r\n        rotate: obj[3],\r\n        translateX: obj[4],\r\n        translateY: obj[5],\r\n        originX: obj[6],\r\n        originY: obj[7]\r\n      }\r\n    }\r\n\r\n    Object.assign(this, TransformBag.defaults, obj)\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    var v = this\r\n\r\n    return [\r\n      v.scaleX,\r\n      v.scaleY,\r\n      v.shear,\r\n      v.rotate,\r\n      v.translateX,\r\n      v.translateY,\r\n      v.originX,\r\n      v.originY\r\n    ]\r\n  }\r\n}\r\n\r\nTransformBag.defaults = {\r\n  scaleX: 1,\r\n  scaleY: 1,\r\n  shear: 0,\r\n  rotate: 0,\r\n  translateX: 0,\r\n  translateY: 0,\r\n  originX: 0,\r\n  originY: 0\r\n}\r\n\r\nexport class ObjectBag {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (objOrArr) {\r\n    this.values = []\r\n\r\n    if (Array.isArray(objOrArr)) {\r\n      this.values = objOrArr\r\n      return\r\n    }\r\n\r\n    objOrArr = objOrArr || {}\r\n    var entries = []\r\n\r\n    for (let i in objOrArr) {\r\n      entries.push([i, objOrArr[i]])\r\n    }\r\n\r\n    entries.sort((a, b) => {\r\n      return a[0] - b[0]\r\n    })\r\n\r\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\r\n    return this\r\n  }\r\n\r\n  valueOf () {\r\n    var obj = {}\r\n    var arr = this.values\r\n\r\n    for (var i = 0, len = arr.length; i < len; i += 2) {\r\n      obj[arr[i]] = arr[i + 1]\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  toArray () {\r\n    return this.values\r\n  }\r\n}\r\n\r\nconst morphableTypes = [\r\n  NonMorphable,\r\n  TransformBag,\r\n  ObjectBag\r\n]\r\n\r\nexport function registerMorphableType (type = []) {\r\n  morphableTypes.push(...[].concat(type))\r\n}\r\n\r\nexport function makeMorphable () {\r\n  extend(morphableTypes, {\r\n    to (val) {\r\n      return new Morphable()\r\n        .type(this.constructor)\r\n        .from(this.valueOf())\r\n        .to(val)\r\n    },\r\n    fromArray (arr) {\r\n      this.init(arr)\r\n      return this\r\n    }\r\n  })\r\n}\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('path', node), node)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null) ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg textpath [href*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path)\r\n","import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null) ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string' ? p\r\n    : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  let p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('polygon', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon)\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('polyline', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline)\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('rect', node), node)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect)\r\n","export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    var item = value.next ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\r\n  shift () {\r\n    // Check if we have a value\r\n    var remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n  // Shows us the first item in the list\r\n  first () {\r\n    return this._first && this._first.value\r\n  }\r\n\r\n  // Shows us the last item in the list\r\n  last () {\r\n    return this._last && this._last.value\r\n  }\r\n\r\n  // Removes the item that was returned from the push\r\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\r\n}\r\n","import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    var node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    var time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    var node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    var node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    var nextTimeout = null\r\n    var lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    var nextFrame = null\r\n    var lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    var nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n","import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nvar makeSchedule = function (runnerInfo) {\r\n  var start = runnerInfo.start\r\n  var duration = runnerInfo.runner.duration()\r\n  var end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  let w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations direclty\r\n\r\n    var absoluteStartTime = 0\r\n    var endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      let runnerInfo = this._runners[runner.id]\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    var index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    var lastRunnerInfo = this._runners[this._runnerIds.indexOf(this._lastRunnerId)]\r\n    var lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    var lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : 0\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTime() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  reverse (yes) {\r\n    var currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    var positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? positive : -positive)\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    var time = this._timeSource()\r\n    var dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    var dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attriute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (var k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      let runnerInfo = this._runners[k]\r\n      let runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      let dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    var runnersLeft = false\r\n    for (var i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      let runnerInfo = this._runners[i]\r\n      let runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      let dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      var finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        var endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { Controller, Ease, Stepper } from './Controller.js'\nimport { extend, register } from '../utils/adopter.js'\nimport { from, to } from '../modules/core/gradiented.js'\nimport { getOrigin } from '../utils/utils.js'\nimport { noop, timeline } from '../modules/core/defaults.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { rx, ry } from '../modules/core/circled.js'\nimport Animator from './Animator.js'\nimport Box from '../types/Box.js'\nimport EventTarget from '../types/EventTarget.js'\nimport Matrix from '../types/Matrix.js'\nimport Morphable, { TransformBag } from './Morphable.js'\nimport Point from '../types/Point.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Timeline from './Timeline.js'\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    var o = Runner.sanitise(duration, delay, when)\r\n    var runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(delay, when)\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    var timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    var timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    let dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  loops (p) {\r\n    var loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      var loopsDone = Math.floor(this._time / loopDuration)\r\n      var relativeTime = (this._time - loopsDone * loopDuration)\r\n      var position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    var whole = Math.floor(p)\r\n    var partial = p % 1\r\n    var time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    var x = this._time\r\n    var d = this._duration\r\n    var w = this._wait\r\n    var t = this._times\r\n    var s = this._swing\r\n    var r = this._reverse\r\n    var position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        var swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        var backwards = (swinging && !r) || (!swinging && r)\r\n        var uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        var clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      var endTime = t * (w + d) - w\r\n      position = x <= 0 ? Math.round(f(1e-5))\r\n        : x < endTime ? f(x)\r\n        : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    var loopsDone = Math.floor(this.loops())\r\n    var swingForward = s && (loopsDone % 2 === 0)\r\n    var forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    var position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    var running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    var duration = this.duration()\r\n    var justStarted = this._lastTime <= 0 && this._time > 0\r\n    var justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    var declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      var converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without beeing ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      var timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        let index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget(target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      var timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (var i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      var current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      var needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    var allfinished = true\r\n    for (var i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      var current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      var converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    var times = 1\r\n    var swing = false\r\n    var wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n}\r\n\r\nRunner.id = 0\r\n\r\nclass FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  let runners = this._transformationRunners.runners\r\n  let netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nclass RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    let id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  remove (id) {\r\n    let index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    this.runners.forEach((runner, i) => {\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        this.edit(lastRunner.id, runner.mergeWith(lastRunner))\r\n      }\r\n\r\n      lastRunner = runner\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    let index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  clearBefore (id) {\r\n    let deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      var o = Runner.sanitise(duration, delay, when)\r\n      var timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(delay, when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, name, val) {\r\n    // apply attributes individually\r\n    if (typeof name === 'object') {\r\n      for (var key in name) {\r\n        this.styleAttr(type, key, name[key])\r\n      }\r\n      return this\r\n    }\r\n\r\n    var morpher = new Morphable(this._stepper).to(val)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](name))\r\n    }, function (pos) {\r\n      this.element()[type](name, morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', to, point)) return this\r\n\r\n    var morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    var isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      let { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      let affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(transforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    var morpher = new Morphable(this._stepper).to(to)\r\n    var from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    var morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    var box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    var morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner)\r\n","import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { ns, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('svg', node), node)\r\n    this.namespace()\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || !(this.node.parentNode instanceof globals.window.SVGElement)\r\n      || this.node.parentNode.nodeName === '#document'\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call docs from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: ns, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  // custom parent method\r\n  parent (type) {\r\n    if (this.isRoot()) {\r\n      return this.node.parentNode.nodeName === '#document'\r\n        ? null\r\n        : adopt(this.node.parentNode)\r\n    }\r\n\r\n    return super.parent(type)\r\n  }\r\n\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    // remove defs reference\r\n    delete this._defs\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('symbol', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol)\r\n","import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n","import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('text', node), node)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Move over x-axis\r\n  // Text is moved its bounding box\r\n  // text-anchor does NOT matter\r\n  x (x, box = this.bbox()) {\r\n    if (x == null) {\r\n      return box.x\r\n    }\r\n\r\n    return this.attr('x', this.attr('x') + x - box.x)\r\n  }\r\n\r\n  // Move over y-axis\r\n  y (y, box = this.bbox()) {\r\n    if (y == null) {\r\n      return box.y\r\n    }\r\n\r\n    return this.attr('y', this.attr('y') + y - box.y)\r\n  }\r\n\r\n  move (x, y, box = this.bbox()) {\r\n    return this.x(x, box).y(y, box)\r\n  }\r\n\r\n  // Move center over x-axis\r\n  cx (x, box = this.bbox()) {\r\n    if (x == null) {\r\n      return box.cx\r\n    }\r\n\r\n    return this.attr('x', this.attr('x') + x - box.cx)\r\n  }\r\n\r\n  // Move center over y-axis\r\n  cy (y, box = this.bbox()) {\r\n    if (y == null) {\r\n      return box.cy\r\n    }\r\n\r\n    return this.attr('y', this.attr('y') + y - box.cy)\r\n  }\r\n\r\n  center (x, y, box = this.bbox()) {\r\n    return this.cx(x, box).cy(y, box)\r\n  }\r\n\r\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      var children = this.node.childNodes\r\n      var firstLine = 0\r\n      text = ''\r\n\r\n      for (var i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = text.split('\\n')\r\n\r\n      // build new lines\r\n      for (var j = 0, jl = text.length; j < jl; j++) {\r\n        this.tspan(text[j]).newLine()\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n  // Set / get leading\r\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\r\n\r\n  // Rebuild appearance type\r\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      var self = this\r\n      var blankLineOffset = 0\r\n      var leading = this.dom.leading\r\n\r\n      this.each(function () {\r\n        var fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n        var dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', dy + blankLineOffset)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Enable / disable build mode\r\n  build (build) {\r\n    this._build = !!build\r\n    return this\r\n  }\r\n\r\n  // overwrite method from parent to set data properly\r\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text) {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text) {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text)\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Text {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('tspan', node), node)\r\n  }\r\n\r\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n    return this\r\n  }\r\n\r\n  // Shortcut dx\r\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\r\n\r\n  // Shortcut dy\r\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\r\n\r\n  x (x) {\r\n    return this.attr('x', x)\r\n  }\r\n\r\n  y (y) {\r\n    return this.attr('x', y)\r\n  }\r\n\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n\r\n  // Create new line\r\n  newLine () {\r\n    // fetch text parent\r\n    var t = this.parent(Text)\r\n\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    var fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    var dy = t.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(dy).attr('x', t.x())\r\n  }\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text) {\r\n      var tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      this.node.appendChild(tspan.node)\r\n\r\n      return tspan.text(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Tspan)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('clipPath', node), node)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      let clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    },\r\n\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Element from './Element.js'\n\nexport default class ForeignObject extends Element {\r\n  constructor (node) {\r\n    super(nodeOrNew('foreignObject', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Point from '../types/Point.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('g', node), node)\r\n  }\r\n\r\n  x (x, box = this.bbox()) {\r\n    if (x == null) return box.x\r\n    return this.move(x, box.y, box)\r\n  }\r\n\r\n  y (y, box = this.bbox()) {\r\n    if (y == null) return box.y\r\n    return this.move(box.x, y, box)\r\n  }\r\n\r\n  move (x = 0, y = 0, box = this.bbox()) {\r\n    const dx = x - box.x\r\n    const dy = y - box.y\r\n\r\n    return this.dmove(dx, dy)\r\n  }\r\n\r\n  dx (dx) {\r\n    return this.dmove(dx, 0)\r\n  }\r\n\r\n  dy (dy) {\r\n    return this.dmove(0, dy)\r\n  }\r\n\r\n  dmove (dx, dy) {\r\n    this.children().forEach((child, i) => {\r\n      // Get the childs bbox\r\n      const bbox = child.bbox()\r\n      // Get childs matrix\r\n      const m = new Matrix(child)\r\n      // Translate childs matrix by amount and\r\n      // transform it back into parents space\r\n      const matrix = m.translate(dx, dy).transform(m.inverse())\r\n      // Calculate new x and y from old box\r\n      const p = new Point(bbox.x, bbox.y).transform(matrix)\r\n      // Move element\r\n      child.move(p.x, p.y)\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  width (width, box = this.bbox()) {\r\n    if (width == null) return box.width\r\n    return this.size(width, box.height, box)\r\n  }\r\n\r\n  height (height, box = this.bbox()) {\r\n    if (height == null) return box.height\r\n    return this.size(box.width, height, box)\r\n  }\r\n\r\n  size (width, height, box = this.bbox()) {\r\n    const p = proportionalSize(this, width, height, box)\r\n    const scaleX = p.width / box.width\r\n    const scaleY = p.height / box.height\r\n\r\n    this.children().forEach((child, i) => {\r\n      const o = new Point(box).transform(new Matrix(child).inverse())\r\n      child.scale(scaleX, scaleY, o.x, o.y)\r\n    })\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('a', node), node)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    // Create a hyperlink element\r\n    linkTo: function (url) {\r\n      var link = new A()\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this.parent().put(link).put(this)\r\n    }\r\n  }\r\n})\r\n\r\nregister(A)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('mask', node), node)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      var masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    },\r\n\r\n    masker () {\r\n      return this.reference('mask')\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  var ret = selector + '{'\r\n\r\n  for (var i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node) {\r\n    super(nodeOrNew('style', node), node)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style: wrapWithAttrCheck(function (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  }),\r\n  fontface: wrapWithAttrCheck(function (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  })\r\n})\r\n\r\nregister(Style)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('textPath', node), node)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    var track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    var track = this.track()\r\n    var pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      var textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg [href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('use', node), node)\r\n  }\r\n\r\n  // Use element as a reference\r\n  element (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).element(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use)\r\n","/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Circle from './elements/Circle.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport { registerWindow } from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Circle,\r\n  Gradient\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\n// extend(Element, getConstructor('Memory'))\r\nextend(Container, getMethodsFor('Container'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray\r\n])\r\n\r\nmakeMorphable()\r\n","/*\n * Vex Chords v2\n * Mohit Muthanna Cheppudira -- http://0xfe.blogspot.com\n */\n\nimport { SVG } from '@svgdotjs/svg.js';\n\n// ChordBox implements the rendering logic for the chord\n// diagrams.\nclass ChordBox {\n  // sel can be a selector or an element.\n  constructor(sel, params) {\n    this.sel = sel;\n    this.params = {\n      ...{\n        numStrings: 6,\n        numFrets: 5,\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 120,\n        strokeWidth: 1,\n        showTuning: true,\n        defaultColor: '#666',\n        bgColor: '#fff',\n        labelColor: '#fff',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: undefined,\n        fontStyle: 'light',\n        fontWeight: '100',\n        labelWeight: '100',\n      },\n      ...params,\n    };\n\n    // Setup defaults if not specifically overridden\n    ['bridgeColor', 'stringColor', 'fretColor', 'strokeColor', 'textColor'].forEach((param) => {\n      this.params[param] = this.params[param] || this.params.defaultColor;\n    });\n\n    ['stringWidth', 'fretWidth'].forEach((param) => {\n      this.params[param] = this.params[param] || this.params.strokeWidth;\n    });\n\n    // Create canvas and add it to the DOM\n    this.canvas = SVG()\n      .addTo(sel)\n      .size(this.params.width, this.params.height);\n\n    // Size and shift board\n    this.width = this.params.width * 0.75;\n    this.height = this.params.height * 0.75;\n    this.x = this.params.x + this.params.width * 0.15;\n    this.y = this.params.y + this.params.height * 0.15;\n\n    this.numStrings = this.params.numStrings;\n    this.numFrets = this.params.numFrets;\n\n    this.spacing = this.width / this.numStrings;\n    this.fretSpacing = this.height / (this.numFrets + 2);\n\n    // Add room on sides for finger positions on 1. and 6. string\n    this.x += this.spacing / 2;\n    this.y += this.fretSpacing;\n\n    this.metrics = {\n      circleRadius: this.width / 20,\n      barreRadius: this.width / 25,\n      fontSize: this.params.fontSize || Math.ceil(this.width / 8),\n      barShiftX: this.width / 28,\n      bridgeStrokeWidth: Math.ceil(this.height / 36),\n    };\n\n    // Content\n    this.position = 0;\n    this.positionText = 0;\n    this.chord = [];\n    this.bars = [];\n    this.tuning = ['E', 'A', 'D', 'G', 'B', 'E'];\n  }\n\n  setNumFrets(numFrets) {\n    this.numFrets = numFrets;\n    this.fretSpacing = this.height / (this.numFrets + 1);\n    return this;\n  }\n\n  setPositionText(position) {\n    this.positionText = position;\n    return this;\n  }\n\n  drawText(x, y, msg, attrs) {\n    const textAttrs = {\n      ...{\n        family: this.params.fontFamily,\n        size: this.metrics.fontSize,\n        style: this.params.fontStyle,\n        weight: this.params.fontWeight,\n      },\n      ...attrs,\n    };\n\n    const text = this.canvas\n      .text(`${msg}`)\n      .stroke(this.params.textColor)\n      .fill(this.params.textColor)\n      .font(textAttrs);\n\n    return text.move(x - text.length() / 2, y);\n  }\n\n  drawLine(x, y, newX, newY) {\n    return this.canvas.line(0, 0, newX - x, newY - y).move(x, y);\n  }\n\n  draw({\n    chord, position, barres, positionText, tuning,\n  }) {\n    this.chord = chord;\n    this.position = position || 0;\n    this.positionText = positionText || 0;\n    this.barres = barres || [];\n    this.tuning = tuning || ['E', 'A', 'D', 'G', 'B', 'E'];\n    if (this.tuning.length === 0) {\n      this.fretSpacing = this.height / (this.numFrets + 1);\n    }\n\n    const { spacing } = this;\n    const { fretSpacing } = this;\n\n    // Draw guitar bridge\n    if (this.position <= 1) {\n      const fromX = this.x;\n      const fromY = this.y - this.metrics.bridgeStrokeWidth;\n      this.canvas\n        .rect(this.x + spacing * (this.numStrings - 1) - fromX, this.y - fromY)\n        .move(fromX, fromY)\n        .stroke({ width: 0 })\n        .fill(this.params.bridgeColor);\n    } else {\n      // Draw position number\n      this.drawText(this.x - this.spacing / 2 - this.spacing * 0.1, this.y + this.fretSpacing * this.positionText, this.position);\n    }\n\n    // Draw strings\n    for (let i = 0; i < this.numStrings; i += 1) {\n      this.drawLine(this.x + spacing * i, this.y, this.x + spacing * i, this.y + fretSpacing * this.numFrets).stroke({\n        width: this.params.stringWidth,\n        color: this.params.stringColor,\n      });\n    }\n\n    // Draw frets\n    for (let i = 0; i < this.numFrets + 1; i += 1) {\n      this.drawLine(this.x, this.y + fretSpacing * i, this.x + spacing * (this.numStrings - 1), this.y + fretSpacing * i).stroke({\n        width: this.params.fretWidth,\n        color: this.params.fretColor,\n      });\n    }\n\n    // Draw tuning keys\n    if (this.params.showTuning && this.tuning.length !== 0) {\n      for (let i = 0; i < Math.min(this.numStrings, this.tuning.length); i += 1) {\n        this.drawText(this.x + this.spacing * i, this.y + this.numFrets * this.fretSpacing + this.fretSpacing / 12, this.tuning[i]);\n      }\n    }\n\n    // Draw chord\n    for (let i = 0; i < this.chord.length; i += 1) {\n      // Light up string, fret, and optional label.\n      this.lightUp({\n        string: this.chord[i][0],\n        fret: this.chord[i][1],\n        label: this.chord.length > 2 ? this.chord[i][2] : undefined,\n      });\n    }\n\n    // Draw barres\n    for (let i = 0; i < this.barres.length; i += 1) {\n      this.lightBar(this.barres[i].fromString, this.barres[i].toString, this.barres[i].fret);\n    }\n  }\n\n  lightUp({ string, fret, label }) {\n    const stringNum = this.numStrings - string;\n    const shiftPosition = this.position === 1 && this.positionText === 1 ? this.positionText : 0;\n\n    const mute = fret === 'x';\n    const fretNum = fret === 'x' ? 0 : fret - shiftPosition;\n\n    const x = this.x + this.spacing * stringNum;\n    let y = this.y + this.fretSpacing * fretNum;\n\n    if (fretNum === 0) {\n      y -= this.metrics.bridgeStrokeWidth;\n    }\n\n    if (!mute) {\n      this.canvas\n        .circle()\n        .move(x, y - this.fretSpacing / 2)\n        .radius(this.metrics.circleRadius)\n        .stroke({ color: this.params.strokeColor, width: this.params.strokeWidth })\n        .fill(fretNum > 0 ? this.params.strokeColor : this.params.bgColor);\n    } else {\n      this.drawText(x, y - this.fretSpacing, 'X');\n    }\n\n    if (label) {\n      const fontSize = this.metrics.fontSize * 0.55;\n      const textYShift = fontSize * 0.66;\n      this.drawText(x, y - this.fretSpacing / 2 - textYShift, label, {\n        weight: this.params.labelWeight,\n        size: fontSize,\n      })\n        .stroke({\n          width: 0.7,\n          color: fretNum !== 0 ? this.params.labelColor : this.params.strokeColor,\n        })\n        .fill(fretNum !== 0 ? this.params.labelColor : this.params.strokeColor);\n    }\n\n    return this;\n  }\n\n  lightBar(stringFrom, stringTo, theFretNum) {\n    let fretNum = theFretNum;\n    if (this.position === 1 && this.positionText === 1) {\n      fretNum -= this.positionText;\n    }\n\n    const stringFromNum = this.numStrings - stringFrom;\n    const stringToNum = this.numStrings - stringTo;\n\n    const x = this.x + this.spacing * stringFromNum - this.metrics.barShiftX;\n    const xTo = this.x + this.spacing * stringToNum + this.metrics.barShiftX;\n\n    const y = this.y + this.fretSpacing * (fretNum - 1) + this.fretSpacing / 4;\n    const yTo = this.y + this.fretSpacing * (fretNum - 1) + (this.fretSpacing / 4) * 3;\n\n    this.canvas\n      .rect(xTo - x, yTo - y)\n      .move(x, y)\n      .radius(this.metrics.barreRadius)\n      .fill(this.params.strokeColor);\n\n    return this;\n  }\n}\n\nexport default ChordBox;\n","/*\n * Vex Chords\n * Mohit Muthanna Cheppudira -- http://0xfe.blogspot.com\n */\n\nconst SHAPES = {\n  'M E': {\n    name: 'Maj',\n    chord: [[3, 2], [4, 3], [5, 3]],\n    barres: [{ fromString: 6, toString: 1, fret: 1 }],\n  },\n  'm E': {\n    name: 'm',\n    chord: [[4, 3], [5, 3]],\n    barres: [{ fromString: 6, toString: 1, fret: 1 }],\n  },\n  '7 E': {\n    name: '7',\n    chord: [[2, 4], [3, 2], [5, 3]],\n    barres: [{ fromString: 6, toString: 1, fret: 1 }],\n  },\n  'm7 E': {\n    name: 'm7',\n    chord: [[2, 4], [5, 3]],\n    barres: [{ fromString: 6, toString: 1, fret: 1 }],\n  },\n  'M7 E': {\n    name: 'Maj7',\n    chord: [[1, 'x'], [2, 1], [3, 2], [4, 2], [5, 'x'], [6, 1]],\n  },\n  'dim E': {\n    name: 'dim',\n    chord: [[1, 'x'], [3, 2], [5, 'x'], [6, 2]],\n    positionText: 1,\n    barres: [{ fromString: 4, toString: 2, fret: 1 }],\n  },\n  'm7b5 E': {\n    name: 'm7b5',\n    chord: [[1, 'x'], [2, 1], [3, 2], [4, 2], [5, 'x'], [6, 2]],\n    positionText: 1,\n  },\n  'sus4 E': {\n    name: 'sus4',\n    chord: [],\n    barres: [{ fromString: 6, toString: 1, fret: 1 }, { fromString: 5, toString: 3, fret: 3 }],\n  },\n  '7sus4 E': {\n    name: '7sus4',\n    chord: [[3, 3], [5, 3]],\n    barres: [{ fromString: 6, toString: 1, fret: 1 }],\n  },\n  '13 E': {\n    name: '13',\n    chord: [[1, 'x'], [2, 4], [3, 3], [4, 2], [5, 'x'], [6, 2]],\n    positionText: 1,\n  },\n  'M A': {\n    name: 'Maj',\n    chord: [[2, 3], [3, 3], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  'm A': {\n    name: 'm',\n    chord: [[2, 2], [3, 3], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  '7 A': {\n    name: '7',\n    chord: [[2, 3], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  'm7 A': {\n    name: 'm7',\n    chord: [[2, 2], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  'm7b5 A': {\n    name: 'm7b5',\n    chord: [[2, 2], [4, 2], [6, 'x']],\n    barres: [{ fromString: 5, toString: 3, fret: 1 }],\n  },\n  'dim A': {\n    name: 'dim',\n    chord: [[1, 'x'], [2, 3], [3, 1], [4, 3], [5, 2], [6, 'x']],\n    positionText: 1,\n  },\n  'M7 A': {\n    name: 'Maj7',\n    chord: [[2, 3], [3, 2], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  'sus2 A': {\n    name: 'sus2',\n    chord: [[3, 3], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  'sus4 A': {\n    name: 'sus4',\n    chord: [[2, 4], [3, 3], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  '7sus4 A': {\n    name: '7sus4',\n    chord: [[2, 4], [4, 3], [6, 'x']],\n    barres: [{ fromString: 5, toString: 1, fret: 1 }],\n  },\n  '9 A': {\n    name: '9',\n    chord: [[1, 'x'], [2, 2], [3, 2], [4, 1], [5, 2], [6, 'x']],\n    positionText: 1,\n  },\n  '7b9 A': {\n    name: '7b9',\n    chord: [[1, 'x'], [2, 1], [3, 2], [4, 1], [5, 2], [6, 'x']],\n    positionText: 1,\n  },\n  '7#9 A': {\n    name: '7#9',\n    chord: [[1, 'x'], [2, 3], [3, 2], [4, 1], [5, 2], [6, 'x']],\n    positionText: 1,\n  },\n  '13 A': {\n    name: '13',\n    chord: [[1, 4], [2, 4], [3, 2], [4, 4], [5, 2], [6, 'x']],\n    positionText: 1,\n  },\n};\n\nconst POSITIONS = {\n  E: {\n    A: 5,\n    'A#': 6,\n    Bb: 6,\n    B: 7,\n    C: 8,\n    'C#': 9,\n    Db: 9,\n    D: 10,\n    'D#': 11,\n    Eb: 11,\n    E: 12,\n    F: 1,\n    'F#': 2,\n    Gb: 2,\n    G: 3,\n    'G#': 4,\n    Ab: 4,\n  },\n  A: {\n    A: 12,\n    'A#': 1,\n    Bb: 1,\n    B: 2,\n    C: 3,\n    'C#': 4,\n    Db: 4,\n    D: 5,\n    'D#': 6,\n    Eb: 6,\n    E: 7,\n    F: 8,\n    'F#': 9,\n    Gb: 9,\n    G: 10,\n    'G#': 11,\n    Ab: 11,\n  },\n};\n\nfunction build(key, string, shape) {\n  const theString = string.toUpperCase();\n  const position = POSITIONS[theString][key];\n  const struct = SHAPES[shape];\n\n  return {\n    name: key + struct.name,\n    chord: struct.chord,\n    position,\n    positionText: struct.positionText,\n    barres: struct.barres,\n  };\n}\n\nexport { POSITIONS, SHAPES, build };\n","/*\n * Vex Chords v2\n * Mohit Muthanna Cheppudira -- http://0xfe.blogspot.com\n */\n\nimport ChordBox from './chordbox';\nimport { POSITIONS, SHAPES, build } from './builder';\n\nfunction draw(sel, chord, opts) {\n  return new ChordBox(sel, opts).draw(chord);\n}\n\nexport {\n  POSITIONS, SHAPES, ChordBox, build, draw,\n};\n"],"sourceRoot":""}